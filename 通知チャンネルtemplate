// 基本こことトリガーを設定すれば動くと思う。
var postchannel = {
  webhooks: '', // webhookのURL
  // webhooks: '', // テスト環境
  icon : '', // iconの設定(必要なければコメントアウトしてください)
  channel: '' // youtubeチャンネルのID
}

// mainの関数
async function getvideoset(){
  const youtubeurl = "https://www.youtube.com/watch?v=";
  console.log(postchannel.channel);

  // youtubeのデータを持ってくる
  var datas = await getYoutubeData(postchannel.channel,eventType="none");  // 配信のタイプ(none, upcoming,live)
  var data = datas[0]; // 最初のデータを持ってくる
  
  console.log(data);
  
  if (!data){ 
    return 1;
  }
  var posttime = { // nowdataに送るdir作り
    post_time: data.snippet.publishedAt,
    minutes:15
  };
  // 時間内であれば実行する
  if (discordsystem.nowdata(posttime) === 0){ // 実行テストの場合は「0」ではなく「1」にして実行してください。
    var url = `${youtubeurl}${data.id.videoId}`;
    // var icon = data.snippet.thumbnails.default.url;
    console.log(url);
    var staus = data.snippet.liveBroadcastContent == 'upcoming' ? "配信枠を立てました!!" : "新しい動画が投稿されました!!";

    var postData = { // ディスコードに送るデータ作り
    username : data.snippet.channelTitle,
    avatar_url: postchannel.icon,
      content : `**「${data.snippet.channelTitle}」が${staus}** \n ${url}`
    }

    if (postData != null){
      console.log(postData);
      discordsystem.postDiscord(postchannel.webhooks,postData);
    }
  }
}
// youtubeAPIのデータ取得
async function getYoutubeData(channel,eventType="none"){
  var results = YouTube.Search.list('id,snippet',{
    "maxResults":1, // 取得上限
    "channelId": channel, // チャンネルID
    "order":"date", // 並び替え
    "type": "video", // 取得する種類(video, playlist,channel)
    "eventType": eventType, // 配信のタイプ(none, upcoming,live)
  });
  console.log(results.items);
  return results.items;
}





